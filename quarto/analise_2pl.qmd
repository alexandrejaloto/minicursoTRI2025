# Análise de itens dicotômicos

```{r, echo=FALSE, include=FALSE}
library(mirt)
devtools::load_all()
```

## Preparação

Importar banco

```{r}
data(banco.2pl, package = 'minicursoTRI2025')
```

Nome das variáveis do banco

```{r}
names(banco.2pl)
```

São 10 itens e a variável de grupo.

Confirmar que os itens são dicotômicos

```{r}
table(banco.2pl$Item_1)
```

Função apply para toda a tabela (quando usa 2, a função percorre cada coluna). Retirar a coluna 11, pois se refere ao grupo

```{r}
apply(banco.2pl[,-11], 2, table)
```

Confirmar os grupos

```{r}
table(banco.2pl$grupo)
```

## Análise inicial

### Calibração inicial

Calibrar os itens no modelo logístico de dois parâmetros

```{r}
fit.2pl <- mirt(data = banco.2pl[,-11], model = 1, itemtype = '2PL')
```

Verificar os parâmetros dos itens

```{r}
coef(fit.2pl)
```

Verificar os parâmetros dos itens de forma simplificada

```{r}
coef(fit.2pl, simplify = TRUE)
```

Verificar os parâmetros dos itens (dificuldade em vez do intercepto) de forma simplificada

```{r}
coef(fit.2pl, IRTpars = TRUE, simplify = TRUE)
```

Armazenar os parâmetros em um objeto

```{r}
pars <- data.frame(coef(fit.2pl, IRTpars = TRUE, simplify = TRUE)$items)
pars
```

### Gráficos

Curva de informação do teste

```{r}
plot(fit.2pl, type = 'info')
```

Confiabilidade do teste em função do escore

```{r}
plot(fit.2pl, type = 'rxx')
```

Erro padrão de medida em função do escore

```{r}
plot(fit.2pl, type = 'SE')
```

Informação do teste e erro padrão

```{r}
plot(fit.2pl, type = 'infoSE')
```

Curva de informação de cada item

```{r}
plot(fit.2pl, type = 'infotrace')
```

Curva característica de cada item

```{r}
plot(fit.2pl, type = 'trace')
```

Gráficos de cada item

```{r}
itemplot(fit.2pl, 1, 'info')
itemplot(fit.2pl, 1, 'SE')
itemplot(fit.2pl, 1, 'trace')
itemplot(fit.2pl, 1, 'infoSE')
itemplot(fit.2pl, 1, 'infotrace')
```

Calcular o escore dos sujeitos e o erro de medida

```{r}
escore.2pl <- fscores(object = fit.2pl, full.scores.SE = TRUE)
head(escore.2pl)
```

### Análise de DIF

Calibrar usando a função para múltiplos grupos

```{r}
fit.2pl.mg <- multipleGroup(data = banco.2pl[,-11],
                            model = 1,
                            group = banco.2pl$grupo,
                            itemtype = '2PL',
                            invariance = c('free_mean',
                                           'free_var',
                                           colnames(banco.2pl)))

pars.mg <- coef(fit.2pl.mg, IRTpars = TRUE, simplify = TRUE)
pars.mg
```
Função RMSD_DIF no pacote mirt (após a aula, estude a ajuda da função)

```{r}
dif.rmsd <- RMSD_DIF(pooled_mod = fit.2pl.mg)
dif.rmsd
```

Conclusão: o Item_2 possui DIF.

## Análise final

### Calibração final

Calibrar deixando o Item_2 e o Item_8 livres entre os grupos

```{r}
fit.2pl.mg2 <- multipleGroup(data = banco.2pl[,-11],
                             model = 1,
                             group = banco.2pl$grupo,
                             itemtype = '2PL',
                             invariance = c('free_mean',
                                            'free_var',
                                            colnames(banco.2pl)[-c(2)]))
```

Parâmetros da nova calibração

```{r}
pars.mg2 <- coef(fit.2pl.mg2, IRTpars = TRUE, simplify = TRUE)
pars.mg2
```

Análise de DIF após nova calibração (lembrando que o Item_2 está livre)

```{r}
dif.rmsd <- RMSD_DIF(pooled_mod = fit.2pl.mg2)
dif.rmsd
```

### Gráficos

Curva de informação do teste

```{r}
plot(fit.2pl.mg2, type = 'info')
```

Erro padrão de medida em função do escore

```{r}
plot(fit.2pl.mg2, type = 'SE')
```

Curva de informação de cada item

```{r}
plot(fit.2pl.mg2, type = 'infotrace')
```

Curva característica de cada item

```{r}
plot(fit.2pl.mg2, type = 'trace')
```

Gráficos de cada item

```{r}
itemplot(fit.2pl.mg2, 1, 'info')
itemplot(fit.2pl.mg2, 1, 'trace')
```
